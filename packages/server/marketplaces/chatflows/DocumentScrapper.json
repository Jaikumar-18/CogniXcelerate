{
    "nodes": [
        {
            "id": "chatOpenAI_0",
            "position": {
                "x": 1449.0283202996854,
                "y": 29.3933372676629
            },
            "type": "customNode",
            "data": {
                "id": "chatOpenAI_0",
                "label": "ChatOpenAI",
                "version": 8.2,
                "name": "chatOpenAI",
                "type": "ChatOpenAI",
                "baseClasses": ["ChatOpenAI", "BaseChatModel", "BaseLanguageModel", "Runnable"],
                "category": "Chat Models",
                "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "chatOpenAI_0-input-credential-credential",
                        "display": true
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "gpt-4o-mini",
                        "id": "chatOpenAI_0-input-modelName-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "step": 0.1,
                        "default": 0.9,
                        "optional": true,
                        "id": "chatOpenAI_0-input-temperature-number",
                        "display": true
                    },
                    {
                        "label": "Streaming",
                        "name": "streaming",
                        "type": "boolean",
                        "default": true,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-streaming-boolean",
                        "display": true
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-maxTokens-number",
                        "display": true
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-topP-number",
                        "display": true
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-frequencyPenalty-number",
                        "display": true
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-presencePenalty-number",
                        "display": true
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-timeout-number",
                        "display": true
                    },
                    {
                        "label": "Strict Tool Calling",
                        "name": "strictToolCalling",
                        "type": "boolean",
                        "description": "Whether the model supports the `strict` argument when passing in tools. If not specified, the `strict` argument will not be passed to OpenAI.",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-strictToolCalling-boolean",
                        "display": true
                    },
                    {
                        "label": "Stop Sequence",
                        "name": "stopSequence",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "description": "List of stop words to use when generating. Use comma to separate multiple stop words.",
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-stopSequence-string",
                        "display": true
                    },
                    {
                        "label": "BasePath",
                        "name": "basepath",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-basepath-string",
                        "display": true
                    },
                    {
                        "label": "Proxy Url",
                        "name": "proxyUrl",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-proxyUrl-string",
                        "display": true
                    },
                    {
                        "label": "BaseOptions",
                        "name": "baseOptions",
                        "type": "json",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-baseOptions-json",
                        "display": true
                    },
                    {
                        "label": "Allow Image Uploads",
                        "name": "allowImageUploads",
                        "type": "boolean",
                        "description": "Allow image input. Refer to the <a href=\"https://docs.flowiseai.com/using-flowise/uploads#image\" target=\"_blank\">docs</a> for more details.",
                        "default": false,
                        "optional": true,
                        "id": "chatOpenAI_0-input-allowImageUploads-boolean",
                        "display": true
                    },
                    {
                        "label": "Image Resolution",
                        "description": "This parameter controls the resolution in which the model views the image.",
                        "name": "imageResolution",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            },
                            {
                                "label": "Auto",
                                "name": "auto"
                            }
                        ],
                        "default": "low",
                        "optional": false,
                        "show": {
                            "allowImageUploads": true
                        },
                        "id": "chatOpenAI_0-input-imageResolution-options",
                        "display": false
                    },
                    {
                        "label": "Reasoning Effort",
                        "description": "Constrains effort on reasoning for reasoning models. Only applicable for o1 and o3 models.",
                        "name": "reasoningEffort",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "Medium",
                                "name": "medium"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            }
                        ],
                        "default": "medium",
                        "optional": false,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-reasoningEffort-options",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Cache",
                        "name": "cache",
                        "type": "BaseCache",
                        "optional": true,
                        "id": "chatOpenAI_0-input-cache-BaseCache",
                        "display": true
                    }
                ],
                "inputs": {
                    "cache": "",
                    "modelName": "gpt-4o-mini",
                    "temperature": "0.7",
                    "streaming": true,
                    "maxTokens": "",
                    "topP": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "timeout": "",
                    "strictToolCalling": "",
                    "stopSequence": "",
                    "basepath": "",
                    "proxyUrl": "",
                    "baseOptions": "",
                    "allowImageUploads": "",
                    "imageResolution": "low",
                    "reasoningEffort": "medium"
                },
                "outputAnchors": [
                    {
                        "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
                        "name": "chatOpenAI",
                        "label": "ChatOpenAI",
                        "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                        "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 676,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 1449.0283202996854,
                "y": 29.3933372676629
            }
        },
        {
            "id": "bufferWindowMemory_0",
            "position": {
                "x": 632.7338381307178,
                "y": -93.64798401615803
            },
            "type": "customNode",
            "data": {
                "id": "bufferWindowMemory_0",
                "label": "Buffer Window Memory",
                "version": 2,
                "name": "bufferWindowMemory",
                "type": "BufferWindowMemory",
                "baseClasses": ["BufferWindowMemory", "BaseChatMemory", "BaseMemory"],
                "category": "Memory",
                "description": "Uses a window of size k to surface the last k back-and-forth to use as memory",
                "inputParams": [
                    {
                        "label": "Size",
                        "name": "k",
                        "type": "number",
                        "default": "4",
                        "description": "Window of size k to surface the last k back-and-forth to use as memory.",
                        "id": "bufferWindowMemory_0-input-k-number",
                        "display": true
                    },
                    {
                        "label": "Session Id",
                        "name": "sessionId",
                        "type": "string",
                        "description": "If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory#ui-and-embedded-chat\">more</a>",
                        "default": "",
                        "optional": true,
                        "additionalParams": true,
                        "id": "bufferWindowMemory_0-input-sessionId-string",
                        "display": true
                    },
                    {
                        "label": "Memory Key",
                        "name": "memoryKey",
                        "type": "string",
                        "default": "chat_history",
                        "additionalParams": true,
                        "id": "bufferWindowMemory_0-input-memoryKey-string",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "k": "4",
                    "sessionId": "",
                    "memoryKey": "chat_history"
                },
                "outputAnchors": [
                    {
                        "id": "bufferWindowMemory_0-output-bufferWindowMemory-BufferWindowMemory|BaseChatMemory|BaseMemory",
                        "name": "bufferWindowMemory",
                        "label": "BufferWindowMemory",
                        "description": "Uses a window of size k to surface the last k back-and-forth to use as memory",
                        "type": "BufferWindowMemory | BaseChatMemory | BaseMemory"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 337,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 632.7338381307178,
                "y": -93.64798401615803
            }
        },
        {
            "id": "openAIEmbeddings_0",
            "position": {
                "x": 633.7318165688002,
                "y": 287.757610631986
            },
            "type": "customNode",
            "data": {
                "id": "openAIEmbeddings_0",
                "label": "OpenAI Embeddings",
                "version": 4,
                "name": "openAIEmbeddings",
                "type": "OpenAIEmbeddings",
                "baseClasses": ["OpenAIEmbeddings", "Embeddings"],
                "category": "Embeddings",
                "description": "OpenAI API to generate embeddings for a given text",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "openAIEmbeddings_0-input-credential-credential",
                        "display": true
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "text-embedding-ada-002",
                        "id": "openAIEmbeddings_0-input-modelName-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Strip New Lines",
                        "name": "stripNewLines",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-stripNewLines-boolean",
                        "display": true
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-batchSize-number",
                        "display": true
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-timeout-number",
                        "display": true
                    },
                    {
                        "label": "BasePath",
                        "name": "basepath",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-basepath-string",
                        "display": true
                    },
                    {
                        "label": "Dimensions",
                        "name": "dimensions",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-dimensions-number",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "modelName": "text-embedding-ada-002",
                    "stripNewLines": "",
                    "batchSize": "",
                    "timeout": "",
                    "basepath": "",
                    "dimensions": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
                        "name": "openAIEmbeddings",
                        "label": "OpenAIEmbeddings",
                        "description": "OpenAI API to generate embeddings for a given text",
                        "type": "OpenAIEmbeddings | Embeddings"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 430,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 633.7318165688002,
                "y": 287.757610631986
            }
        },
        {
            "id": "characterTextSplitter_0",
            "position": {
                "x": 217.67301017231017,
                "y": 109.19115804903925
            },
            "type": "customNode",
            "data": {
                "id": "characterTextSplitter_0",
                "label": "Character Text Splitter",
                "version": 1,
                "name": "characterTextSplitter",
                "type": "CharacterTextSplitter",
                "baseClasses": ["CharacterTextSplitter", "TextSplitter", "BaseDocumentTransformer", "Runnable"],
                "category": "Text Splitters",
                "description": "splits only on one type of character (defaults to \"\\n\\n\").",
                "inputParams": [
                    {
                        "label": "Chunk Size",
                        "name": "chunkSize",
                        "type": "number",
                        "description": "Number of characters in each chunk. Default is 1000.",
                        "default": 1000,
                        "optional": true,
                        "id": "characterTextSplitter_0-input-chunkSize-number",
                        "display": true
                    },
                    {
                        "label": "Chunk Overlap",
                        "name": "chunkOverlap",
                        "type": "number",
                        "description": "Number of characters to overlap between chunks. Default is 200.",
                        "default": 200,
                        "optional": true,
                        "id": "characterTextSplitter_0-input-chunkOverlap-number",
                        "display": true
                    },
                    {
                        "label": "Custom Separator",
                        "name": "separator",
                        "type": "string",
                        "placeholder": "\" \"",
                        "description": "Separator to determine when to split the text, will override the default separator",
                        "optional": true,
                        "id": "characterTextSplitter_0-input-separator-string",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "chunkSize": 1000,
                    "chunkOverlap": "50",
                    "separator": ""
                },
                "outputAnchors": [
                    {
                        "id": "characterTextSplitter_0-output-characterTextSplitter-CharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
                        "name": "characterTextSplitter",
                        "label": "CharacterTextSplitter",
                        "description": "splits only on one type of character (defaults to \"\\n\\n\").",
                        "type": "CharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 482,
            "selected": false,
            "positionAbsolute": {
                "x": 217.67301017231017,
                "y": 109.19115804903925
            },
            "dragging": false
        },
        {
            "id": "memoryVectorStore_0",
            "position": {
                "x": 1078.4305985298336,
                "y": 24.95166950750081
            },
            "type": "customNode",
            "data": {
                "id": "memoryVectorStore_0",
                "label": "In-Memory Vector Store",
                "version": 1,
                "name": "memoryVectorStore",
                "type": "Memory",
                "baseClasses": ["Memory", "VectorStoreRetriever", "BaseRetriever"],
                "category": "Vector Stores",
                "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
                "inputParams": [
                    {
                        "label": "Top K",
                        "name": "topK",
                        "description": "Number of top results to fetch. Default to 4",
                        "placeholder": "4",
                        "type": "number",
                        "optional": true,
                        "id": "memoryVectorStore_0-input-topK-number",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Document",
                        "name": "document",
                        "type": "Document",
                        "list": true,
                        "optional": true,
                        "id": "memoryVectorStore_0-input-document-Document",
                        "display": true
                    },
                    {
                        "label": "Embeddings",
                        "name": "embeddings",
                        "type": "Embeddings",
                        "id": "memoryVectorStore_0-input-embeddings-Embeddings",
                        "display": true
                    }
                ],
                "inputs": {
                    "document": ["{{fileLoader_0.data.instance}}"],
                    "embeddings": "{{openAIEmbeddings_0.data.instance}}",
                    "topK": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "",
                        "options": [
                            {
                                "id": "memoryVectorStore_0-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
                                "name": "retriever",
                                "label": "Memory Retriever",
                                "description": "",
                                "type": "Memory | VectorStoreRetriever | BaseRetriever"
                            },
                            {
                                "id": "memoryVectorStore_0-output-vectorStore-Memory|VectorStore",
                                "name": "vectorStore",
                                "label": "Memory Vector Store",
                                "description": "",
                                "type": "Memory | VectorStore"
                            }
                        ],
                        "default": "retriever"
                    }
                ],
                "outputs": {
                    "output": "retriever"
                },
                "selected": false
            },
            "width": 300,
            "height": 413,
            "selected": false,
            "positionAbsolute": {
                "x": 1078.4305985298336,
                "y": 24.95166950750081
            },
            "dragging": false
        },
        {
            "id": "fileLoader_0",
            "position": {
                "x": -118.12221853674893,
                "y": -332.6245252619507
            },
            "type": "customNode",
            "data": {
                "id": "fileLoader_0",
                "label": "File Loader",
                "version": 2,
                "name": "fileLoader",
                "type": "Document",
                "baseClasses": ["Document"],
                "category": "Document Loaders",
                "description": "A generic file loader that can load txt, json, csv, docx, pdf, and other files",
                "inputParams": [
                    {
                        "label": "File",
                        "name": "file",
                        "type": "file",
                        "fileType": "*",
                        "id": "fileLoader_0-input-file-file",
                        "display": true
                    },
                    {
                        "label": "Pdf Usage",
                        "name": "usage",
                        "type": "options",
                        "description": "Only when loading PDF files",
                        "options": [
                            {
                                "label": "One document per page",
                                "name": "perPage"
                            },
                            {
                                "label": "One document per file",
                                "name": "perFile"
                            }
                        ],
                        "default": "perPage",
                        "optional": true,
                        "additionalParams": true,
                        "id": "fileLoader_0-input-usage-options",
                        "display": true
                    },
                    {
                        "label": "Use Legacy Build",
                        "name": "legacyBuild",
                        "type": "boolean",
                        "description": "Use legacy build for PDF compatibility issues",
                        "optional": true,
                        "additionalParams": true,
                        "id": "fileLoader_0-input-legacyBuild-boolean",
                        "display": true
                    },
                    {
                        "label": "JSONL Pointer Extraction",
                        "name": "pointerName",
                        "type": "string",
                        "description": "Only when loading JSONL files",
                        "placeholder": "<pointerName>",
                        "optional": true,
                        "additionalParams": true,
                        "id": "fileLoader_0-input-pointerName-string",
                        "display": true
                    },
                    {
                        "label": "Additional Metadata",
                        "name": "metadata",
                        "type": "json",
                        "description": "Additional metadata to be added to the extracted documents",
                        "optional": true,
                        "additionalParams": true,
                        "id": "fileLoader_0-input-metadata-json",
                        "display": true
                    },
                    {
                        "label": "Omit Metadata Keys",
                        "name": "omitMetadataKeys",
                        "type": "string",
                        "rows": 4,
                        "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
                        "placeholder": "key1, key2, key3.nestedKey1",
                        "optional": true,
                        "additionalParams": true,
                        "id": "fileLoader_0-input-omitMetadataKeys-string",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "fileLoader_0-input-textSplitter-TextSplitter",
                        "display": true
                    }
                ],
                "inputs": {
                    "textSplitter": "{{characterTextSplitter_0.data.instance}}",
                    "usage": "perPage",
                    "legacyBuild": "",
                    "pointerName": "",
                    "metadata": "",
                    "omitMetadataKeys": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "Array of document objects containing metadata and pageContent",
                        "options": [
                            {
                                "id": "fileLoader_0-output-document-Document|json",
                                "name": "document",
                                "label": "Document",
                                "description": "Array of document objects containing metadata and pageContent",
                                "type": "Document | json"
                            },
                            {
                                "id": "fileLoader_0-output-text-string|json",
                                "name": "text",
                                "label": "Text",
                                "description": "Concatenated string from pageContent of documents",
                                "type": "string | json"
                            }
                        ],
                        "default": "document"
                    }
                ],
                "outputs": {
                    "output": "document"
                },
                "selected": false
            },
            "width": 300,
            "height": 446,
            "selected": false,
            "positionAbsolute": {
                "x": -118.12221853674893,
                "y": -332.6245252619507
            },
            "dragging": false
        },
        {
            "id": "conversationalRetrievalQAChain_0",
            "position": {
                "x": 1863.361114052247,
                "y": 96.2918085001154
            },
            "type": "customNode",
            "data": {
                "id": "conversationalRetrievalQAChain_0",
                "label": "Conversational Retrieval QA Chain",
                "version": 3,
                "name": "conversationalRetrievalQAChain",
                "type": "ConversationalRetrievalQAChain",
                "baseClasses": ["ConversationalRetrievalQAChain", "BaseChain", "Runnable"],
                "category": "Chains",
                "description": "Document QA - built on RetrievalQAChain to provide a chat history component",
                "inputParams": [
                    {
                        "label": "Return Source Documents",
                        "name": "returnSourceDocuments",
                        "type": "boolean",
                        "optional": true,
                        "id": "conversationalRetrievalQAChain_0-input-returnSourceDocuments-boolean",
                        "display": true
                    },
                    {
                        "label": "Rephrase Prompt",
                        "name": "rephrasePrompt",
                        "type": "string",
                        "description": "Using previous chat history, rephrase question into a standalone question",
                        "warning": "Prompt must include input variables: {chat_history} and {question}",
                        "rows": 4,
                        "additionalParams": true,
                        "optional": true,
                        "default": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone Question:",
                        "id": "conversationalRetrievalQAChain_0-input-rephrasePrompt-string",
                        "display": true
                    },
                    {
                        "label": "Response Prompt",
                        "name": "responsePrompt",
                        "type": "string",
                        "description": "Taking the rephrased question, search for answer from the provided context",
                        "warning": "Prompt must include input variable: {context}",
                        "rows": 4,
                        "additionalParams": true,
                        "optional": true,
                        "default": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\". Using the provided context, answer the user's question to the best of your ability using the resources provided.\nIf there is nothing in the context relevant to the question at hand, just say \"Hmm, I'm not sure\" and stop after that. Refuse to answer any question not about the info. Never break character.\n------------\n{context}\n------------\nREMEMBER: If there is no relevant information within the context, just say \"Hmm, I'm not sure\". Don't try to make up an answer. Never break character.",
                        "id": "conversationalRetrievalQAChain_0-input-responsePrompt-string",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Chat Model",
                        "name": "model",
                        "type": "BaseChatModel",
                        "id": "conversationalRetrievalQAChain_0-input-model-BaseChatModel",
                        "display": true
                    },
                    {
                        "label": "Vector Store Retriever",
                        "name": "vectorStoreRetriever",
                        "type": "BaseRetriever",
                        "id": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
                        "display": true
                    },
                    {
                        "label": "Memory",
                        "name": "memory",
                        "type": "BaseMemory",
                        "optional": true,
                        "description": "If left empty, a default BufferMemory will be used",
                        "id": "conversationalRetrievalQAChain_0-input-memory-BaseMemory",
                        "display": true
                    },
                    {
                        "label": "Input Moderation",
                        "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
                        "name": "inputModeration",
                        "type": "Moderation",
                        "optional": true,
                        "list": true,
                        "id": "conversationalRetrievalQAChain_0-input-inputModeration-Moderation",
                        "display": true
                    }
                ],
                "inputs": {
                    "model": "{{chatOpenAI_0.data.instance}}",
                    "vectorStoreRetriever": "{{memoryVectorStore_0.data.instance}}",
                    "memory": "{{bufferWindowMemory_0.data.instance}}",
                    "returnSourceDocuments": false,
                    "rephrasePrompt": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone Question:",
                    "responsePrompt": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\". Using the provided context, answer the user's question to the best of your ability using the resources provided.\nIf there is nothing in the context relevant to the question at hand, just say \"Hmm, I'm not sure\" and stop after that. Refuse to answer any question not about the info. Never break character.\n------------\n{context}\n------------\nREMEMBER: If there is no relevant information within the context, just say \"Hmm, I'm not sure\". Don't try to make up an answer. Never break character.",
                    "inputModeration": ""
                },
                "outputAnchors": [
                    {
                        "id": "conversationalRetrievalQAChain_0-output-conversationalRetrievalQAChain-ConversationalRetrievalQAChain|BaseChain|Runnable",
                        "name": "conversationalRetrievalQAChain",
                        "label": "ConversationalRetrievalQAChain",
                        "description": "Document QA - built on RetrievalQAChain to provide a chat history component",
                        "type": "ConversationalRetrievalQAChain | BaseChain | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 538,
            "selected": false,
            "positionAbsolute": {
                "x": 1863.361114052247,
                "y": 96.2918085001154
            },
            "dragging": false
        }
    ],
    "edges": [
        {
            "source": "openAIEmbeddings_0",
            "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "target": "memoryVectorStore_0",
            "targetHandle": "memoryVectorStore_0-input-embeddings-Embeddings",
            "type": "buttonedge",
            "id": "openAIEmbeddings_0-openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-memoryVectorStore_0-memoryVectorStore_0-input-embeddings-Embeddings"
        },
        {
            "source": "characterTextSplitter_0",
            "sourceHandle": "characterTextSplitter_0-output-characterTextSplitter-CharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "target": "fileLoader_0",
            "targetHandle": "fileLoader_0-input-textSplitter-TextSplitter",
            "type": "buttonedge",
            "id": "characterTextSplitter_0-characterTextSplitter_0-output-characterTextSplitter-CharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-fileLoader_0-fileLoader_0-input-textSplitter-TextSplitter"
        },
        {
            "source": "fileLoader_0",
            "sourceHandle": "fileLoader_0-output-document-Document|json",
            "target": "memoryVectorStore_0",
            "targetHandle": "memoryVectorStore_0-input-document-Document",
            "type": "buttonedge",
            "id": "fileLoader_0-fileLoader_0-output-document-Document|json-memoryVectorStore_0-memoryVectorStore_0-input-document-Document"
        },
        {
            "source": "memoryVectorStore_0",
            "sourceHandle": "memoryVectorStore_0-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
            "type": "buttonedge",
            "id": "memoryVectorStore_0-memoryVectorStore_0-output-retriever-Memory|VectorStoreRetriever|BaseRetriever-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever"
        },
        {
            "source": "bufferWindowMemory_0",
            "sourceHandle": "bufferWindowMemory_0-output-bufferWindowMemory-BufferWindowMemory|BaseChatMemory|BaseMemory",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-memory-BaseMemory",
            "type": "buttonedge",
            "id": "bufferWindowMemory_0-bufferWindowMemory_0-output-bufferWindowMemory-BufferWindowMemory|BaseChatMemory|BaseMemory-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-memory-BaseMemory"
        },
        {
            "source": "chatOpenAI_0",
            "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-model-BaseChatModel",
            "type": "buttonedge",
            "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-model-BaseChatModel"
        }
    ]
}
